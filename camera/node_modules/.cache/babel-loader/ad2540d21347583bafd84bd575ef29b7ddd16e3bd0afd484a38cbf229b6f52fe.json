{"ast":null,"code":"var _jsxFileName = \"/Users/max/repositories/test/cameratest/camera/src/components/AllCameras.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const [deviceId, setDeviceId] = React.useState({});\n  const [devices, setDevices] = React.useState([]);\n  const handleDevices = React.useCallback(mediaDevices => setDevices(mediaDevices.filter(({\n    kind\n  }) => kind === \"videoinput\")), [setDevices]);\n  React.useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(handleDevices);\n  }, [handleDevices]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: devices.map((device, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        videoConstraints: {\n          deviceId: device.deviceId\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), device.label || `Device ${key + 1}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n_s(WebcamCapture, \"j66mYOj9DoMC+pUPzhI3H3eU2fQ=\");\n_c = WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["WebcamCapture","_s","deviceId","setDeviceId","React","useState","devices","setDevices","handleDevices","useCallback","mediaDevices","filter","kind","useEffect","navigator","enumerateDevices","then","_jsxDEV","_Fragment","children","map","device","key","Webcam","audio","videoConstraints","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["/Users/max/repositories/test/cameratest/camera/src/components/AllCameras.js"],"sourcesContent":["const WebcamCapture = () => {\n    const [deviceId, setDeviceId] = React.useState({});\n    const [devices, setDevices] = React.useState([]);\n  \n    const handleDevices = React.useCallback(\n      mediaDevices =>\n        setDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\n      [setDevices]\n    );\n  \n    React.useEffect(\n      () => {\n        navigator.mediaDevices.enumerateDevices().then(handleDevices);\n      },\n      [handleDevices]\n    );\n  \n    return (\n      <>\n        {devices.map((device, key) => (\n            <div>\n              <Webcam audio={false} videoConstraints={{ deviceId: device.deviceId }} />\n              {device.label || `Device ${key + 1}`}\n            </div>\n  \n          ))}\n      </>\n    );\n  };"],"mappings":";;;;AAAA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMG,aAAa,GAAGJ,KAAK,CAACK,WAAW,CACrCC,YAAY,IACVH,UAAU,CAACG,YAAY,CAACC,MAAM,CAAC,CAAC;IAAEC;EAAK,CAAC,KAAKA,IAAI,KAAK,YAAY,CAAC,CAAC,EACtE,CAACL,UAAU,CACb,CAAC;EAEDH,KAAK,CAACS,SAAS,CACb,MAAM;IACJC,SAAS,CAACJ,YAAY,CAACK,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAACR,aAAa,CAAC;EAC/D,CAAC,EACD,CAACA,aAAa,CAChB,CAAC;EAED,oBACES,OAAA,CAAAC,SAAA;IAAAC,QAAA,EACGb,OAAO,CAACc,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACrBL,OAAA;MAAAE,QAAA,gBACEF,OAAA,CAACM,MAAM;QAACC,KAAK,EAAE,KAAM;QAACC,gBAAgB,EAAE;UAAEvB,QAAQ,EAAEmB,MAAM,CAACnB;QAAS;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxER,MAAM,CAACS,KAAK,IAAK,UAASR,GAAG,GAAG,CAAE,EAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAEN;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAC5B,EAAA,CA5BED,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}