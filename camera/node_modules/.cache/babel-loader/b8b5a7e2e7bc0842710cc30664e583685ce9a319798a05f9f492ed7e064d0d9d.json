{"ast":null,"code":"var _jsxFileName = \"/Users/max/repositories/test/cameratest/camera/src/components/Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Camera = () => {\n  _s();\n  console.log('Camera running');\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n\n  // console.log('imgSrc', imgSrc);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc.startsWith(\"data:image/jpeg;base64,\")) {\n      const imageBase64 = imageSrc.split(\",\")[1]; // convert the image to base64 (format for transmitting img in network)\n      setImgSrc(imageSrc);\n      saveImage(imageBase64);\n      console.log('worked');\n    } else {\n      console.log('not worked');\n    }\n  }, [webcamRef, setImgSrc]);\n\n  // post image to server\n  const saveImage = async imageBase64 => {\n    try {\n      const response = await fetch(\"http://localhost:3020/api/upload\", {\n        method: \"POST\",\n        // body: JSON.stringify({ image: imgSrc }),\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        body: imageBase64\n      });\n      console.log('response', response);\n      if (response.ok) {\n        console.log(\"Image saved successfully\");\n      } else {\n        console.error(\"Image could not be saved\");\n      }\n    } catch (error) {\n      console.error(\"Error saving image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Camera, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useRef","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Camera","_s","console","log","webcamRef","imgSrc","setImgSrc","useState","capture","useCallback","imageSrc","current","getScreenshot","startsWith","imageBase64","split","saveImage","response","fetch","method","headers","body","ok","error","children","audio","ref","screenshotFormat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/Users/max/repositories/test/cameratest/camera/src/components/Camera.js"],"sourcesContent":["import React, {useRef} from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from 'axios';\n\n\n\nconst Camera = () => {\n    console.log('Camera running');\n    const webcamRef = React.useRef(null);\n    const [imgSrc, setImgSrc] = React.useState(null);\n\n    // console.log('imgSrc', imgSrc);\n    const capture = React.useCallback(() => {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc.startsWith(\"data:image/jpeg;base64,\")) {\n        const imageBase64 = imageSrc.split(\",\")[1]; // convert the image to base64 (format for transmitting img in network)\n        setImgSrc(imageSrc);\n        saveImage(imageBase64);\n        console.log('worked');\n      } else {\n        console.log('not worked');\n      }\n    }, [webcamRef, setImgSrc]);\n\n\n      // post image to server\n      const saveImage = async (imageBase64) => {\n        try {\n          const response = await fetch(\"http://localhost:3020/api/upload\", {\n            method: \"POST\",\n            // body: JSON.stringify({ image: imgSrc }),\n            headers: {\n              \"Content-Type\": \"text/plain\",\n            },\n            body: imageBase64\n        });\n        console.log('response', response);\n\n          if (response.ok) {\n            console.log(\"Image saved successfully\");\n          } else {\n            console.error(\"Image could not be saved\");\n          }\n        } catch (error) {\n          console.error(\"Error saving image:\", error);\n        }\n      };\n\n    return (\n      <>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n        />\n        <button onClick={capture}>Capture photo</button>\n        {imgSrc && (\n          <img\n            src={imgSrc}\n          />\n        )}\n      </>\n    );\n  };\n  \n\n\n  export default Camera;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAMC,SAAS,GAAGZ,KAAK,CAACC,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,WAAW,CAAC,MAAM;IACtC,MAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAO,CAACC,aAAa,CAAC,CAAC;IAClD,IAAIF,QAAQ,CAACG,UAAU,CAAC,yBAAyB,CAAC,EAAE;MAClD,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5CT,SAAS,CAACI,QAAQ,CAAC;MACnBM,SAAS,CAACF,WAAW,CAAC;MACtBZ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B;EACF,CAAC,EAAE,CAACC,SAAS,EAAEE,SAAS,CAAC,CAAC;;EAGxB;EACA,MAAMU,SAAS,GAAG,MAAOF,WAAW,IAAK;IACvC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACd;QACAC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEP;MACV,CAAC,CAAC;MACFZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEc,QAAQ,CAAC;MAE/B,IAAIA,QAAQ,CAACK,EAAE,EAAE;QACfpB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC,MAAM;QACLD,OAAO,CAACqB,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAEH,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA,CAACH,MAAM;MACL+B,KAAK,EAAE,KAAM;MACbC,GAAG,EAAEtB,SAAU;MACfuB,gBAAgB,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFlC,OAAA;MAAQmC,OAAO,EAAExB,OAAQ;MAAAgB,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/C1B,MAAM,iBACLR,OAAA;MACEoC,GAAG,EAAE5B;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACF;EAAA,eACD,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAzDED,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AA6DV,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}